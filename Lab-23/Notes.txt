Deploying Docker Containers with Jenkins Pipelines
Goal:
‚úÖ Pull an image from Docker Hub
‚úÖ Run a container using Jenkins
‚úÖ Automate container deployment

üîπ Step 1Ô∏è‚É£: Write the Jenkins Pipeline
Go to Jenkins ‚Üí New Item ‚Üí Pipeline and paste this script:

groovy
Copy
Edit
pipeline {
    agent { docker { image 'docker:latest' } }

    environment {
        DOCKERHUB_USER = 'your-docker-hub-username'
        IMAGE_NAME = 'myapp'
        IMAGE_TAG = 'latest'
    }

    stages {
        stage('Pull Docker Image') {
            steps {
                sh 'docker pull $DOCKERHUB_USER/$IMAGE_NAME:$IMAGE_TAG'
            }
        }

        stage('Run Docker Container') {
            steps {
                sh 'docker run --name my_running_app -d $DOCKERHUB_USER/$IMAGE_NAME:$IMAGE_TAG'
            }
        }

        stage('Check Running Containers') {
            steps {
                sh 'docker ps'
            }
        }
    }
}
üîπ Step 2Ô∏è‚É£: Run the Pipeline
1Ô∏è‚É£ Click Build Now
2Ô∏è‚É£ Once complete, run this command to check the container:

sh
Copy
Edit
docker ps
You should see my_running_app running!
