Conditional Execution in Jenkins Pipelines
üìù Goal:
Learn how to conditionally execute stages based on:
‚úÖ User-defined parameters
‚úÖ Previous build results

‚úÖ Steps:
1Ô∏è‚É£ Create a New Pipeline Job
Open Jenkins Dashboard ‚Üí Click New Item

Enter Pipeline Name ‚Üí Select Pipeline ‚Üí Click OK

2Ô∏è‚É£ Add the Following Pipeline Code
Copy and paste this script into the pipeline:
----------------------------------------------------
pipeline {
    agent any
    parameters {
        booleanParam(name: 'RUN_TESTS', defaultValue: true, description: 'Run tests?')
    }
    stages {
        stage('Build') {
            steps {
                echo "Building the project..."
                sleep 3
            }
        }
        stage('Test') {
            when {
                expression { params.RUN_TESTS }
            }
            steps {
                echo "Running tests..."
                sleep 3
                echo "Tests completed!"
            }
        }
        stage('Deploy') {
            steps {
                echo "Deploying the application..."
                sleep 3
                echo "Deployment successful!"
            }
        }
    }
}
----------------------------------------------------
3Ô∏è‚É£ Run the Pipeline
Click Build with Parameters

Choose RUN_TESTS = true or false

Click Build Now

Check if the Test stage is skipped when RUN_TESTS = false
