Helm Secrets - Secure Configs in CI/CD
Goal:
‚úÖ Store sensitive data like passwords, API keys securely using Helm Secrets
‚úÖ Integrate secrets into Jenkins pipelines
‚úÖ Use SOPS (Mozilla Secrets OPerationS) + Helm

üîπ Step 1Ô∏è‚É£: Install Helm Secrets & SOPS
We will use SOPS to encrypt/decrypt Helm values files.

Install SOPS & Helm Secrets Plugin
Run the following in WSL:

sh
Copy
Edit
sudo apt-get install -y gnupg
wget https://github.com/mozilla/sops/releases/latest/download/sops-linux-amd64 -O sops
chmod +x sops
sudo mv sops /usr/local/bin/

helm plugin install https://github.com/jkroepke/helm-secrets
‚úÖ Verify Installation:

sh
Copy
Edit
helm secrets --help
sops --version
üîπ Step 2Ô∏è‚É£: Create an Encrypted Secrets File
üîπ Store sensitive database credentials securely.

1Ô∏è‚É£ Create a secrets file for production:

sh
Copy
Edit
touch secrets-prod.yaml
2Ô∏è‚É£ Add sensitive data:

yaml
Copy
Edit
apiKey: "MY_SECRET_KEY"
databasePassword: "SuperSecretPassword"
3Ô∏è‚É£ Encrypt the file using SOPS:

sh
Copy
Edit
sops -e -i secrets-prod.yaml
‚úî Now, the file is encrypted and unreadable.

4Ô∏è‚É£ To view decrypted secrets:

sh
Copy
Edit
sops -d secrets-prod.yaml
üîπ Step 3Ô∏è‚É£: Use Encrypted Secrets in Helm
Modify the Helm values file to reference secrets:

yaml
Copy
Edit
env:
  apiKey: ENC[AES256_GCM,data...,iv...,tag...]
  databasePassword: ENC[AES256_GCM,data...,iv...,tag...]
To deploy with secrets:

sh
Copy
Edit
helm secrets upgrade --install myapp-release ./myapp -f secrets-prod.yaml
üîπ Step 4Ô∏è‚É£: Integrate Secrets with Jenkins
Modify your Jenkinsfile to handle encrypted secrets:

groovy
Copy
Edit
pipeline {
    agent any
    environment {
        RELEASE_NAME = "myapp-release"
        NAMESPACE = "default"
    }
    stages {
        stage('Deploy with Encrypted Secrets') {
            steps {
                script {
                    sh """
                    helm secrets upgrade --install $RELEASE_NAME ./myapp -f secrets-prod.yaml
                    """
                }
            }
        }
    }
}
‚úî Jenkins will automatically decrypt and use the secrets for deployment!

